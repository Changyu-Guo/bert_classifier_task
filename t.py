# -*- coding: utf - 8 -*-

import numpy as np
import matplotlib.pyplot as plt

thresholds = np.arange(0.5, 0.29, -0.01)

precisions = [
    0.8925642671637088, 0.883013188322732, 0.8786111995628612, 0.8778855101579265, 0.8769387107222224,
    0.8729650773458956, 0.8718838050063489, 0.8719143339368619, 0.8845330606728394, 0.8839454575471632,
    0.883833449748796, 0.8832414198072155, 0.8832524086974475, 0.8832950963095024, 0.8829801744922667,
    0.880289289355743, 0.8765157044500828, 0.8765157044500828, 0.8762124464038556, 0.8758484639492335,
    0.8758484639492335
]
recalls = [0.87309817207764, 0.8739094584537146, 0.8742463856774342, 0.8742463856774342, 0.8767085461584627,
           0.8767085461584627, 0.8771704265247539, 0.8776323068910451, 0.8874031963789158, 0.8877401236026354,
           0.8894553894688447, 0.8894553894688447, 0.8896440687141277, 0.8899809959378473, 0.8909243921642624,
           0.8910129739695596, 0.8910129739695596, 0.8910129739695596, 0.8910129739695596, 0.8980709580327368,
           0.8980709580327368
]
f1_scores = [0.8761666448657759, 0.8702677241319231, 0.8679457817834164, 0.8675758224789398, 0.8682223029667664,
             0.8646958592752059, 0.8643731918364674, 0.8646105476659698, 0.873626374606325, 0.8735278912133134,
             0.8743551200821819, 0.8740445109575441, 0.8741430282719621, 0.8743454878290329, 0.874707287804546,
             0.8740119316105036, 0.8726397189175362, 0.8726397189175362, 0.8724949441838744, 0.8744889635068397,
             0.8744889635068397
]

plt.figure(figsize=(20, 20))

plt.plot(thresholds, precisions, 'r^-', label='Precision')
plt.plot(thresholds, recalls, 'go-', label='Recall')
plt.plot(thresholds, f1_scores, 'b+-', label='F1-Score')

for threshold, precision in zip(thresholds, precisions):
    plt.text(threshold, precision, '%.3f' % precision, ha='center', va='bottom', fontsize=6)
for threshold, recall in zip(thresholds, recalls):
    plt.text(threshold, recall, '%.3f' % recall, ha='center', va='bottom', fontsize=6)
for threshold, f1_score in zip(thresholds, f1_scores):
    plt.text(threshold, f1_score, '%.3f' % f1_score, ha='center', va='bottom', fontsize=7)

plt.xlabel('thresholds')
plt.ylabel('precision - recall - f1-score')

plt.xlim(0.51, 0.29)
plt.ylim(0.84, 0.90)

plt.legend()

plt.show()


thresholds = [
    0.5, 0.49, 0.48, 0.47, 0.46,
    0.45, 0.44, 0.43, 0.42, 0.41,
    0.4, 0.39, 0.38, 0.37, 0.36,
    0.35, 0.34, 0.33, 0.32, 0.31,
    0.3, 0.29, 0.28, 0.27, 0.26,
    0.25, 0.24, 0.23, 0.22, 0.21,
    0.2, 0.19, 0.18, 0.17, 0.16,
    0.15, 0.14, 0.13, 0.12, 0.11,
    0.1, 0.09, 0.08, 0.07, 0.06,
    0.05, 0.04, 0.03, 0.02, 0.01
]

precisions = [
    0.8925642671637088, 0.883013188322732, 0.8786111995628612, 0.8778855101579265, 0.8769387107222224,
    0.8729650773458956, 0.8718838050063489, 0.8719143339368619, 0.8845330606728394, 0.8839454575471632,
    0.883833449748796, 0.8832414198072155, 0.8832524086974475, 0.8832950963095024, 0.8829801744922667,
    0.880289289355743, 0.8765157044500828, 0.8765157044500828, 0.8762124464038556, 0.8758484639492335,
    0.8758484639492335, 0.8736901252510048, 0.8735554870100302, 0.8728487029725779, 0.8727863786066756,
    0.8727863786066756, 0.8665721528681695, 0.8652244439732908, 0.8648804206889699, 0.8642529088505304,
    0.8529857967750152, 0.8512183468943576, 0.8495790026320625, 0.8460299449370267, 0.8454151368484735,
    0.8442609425474397, 0.8394466184548282, 0.8332866563688678, 0.8327057473624546, 0.8279887662303791,
    0.8264543418460877, 0.8262762107555762, 0.8243637154589532, 0.8237173798189512, 0.8229557515593422,
    0.8184954790077842, 0.8142065371463396, 0.8121985307006274, 0.7686482493455374, 0.6624037328093839
]
recalls = [
    0.87309817207764, 0.8739094584537146, 0.8742463856774342, 0.8742463856774342, 0.8767085461584627,
    0.8767085461584627, 0.8771704265247539, 0.8776323068910451, 0.8874031963789158, 0.8877401236026354,
    0.8894553894688447, 0.8894553894688447, 0.8896440687141277, 0.8899809959378473, 0.8909243921642624,
    0.8910129739695596, 0.8910129739695596, 0.8910129739695596, 0.8910129739695596, 0.8980709580327368,
    0.8980709580327368, 0.9007663758224942, 0.9007663758224942, 0.9024816416887035, 0.9033150198460577,
    0.9033150198460577, 0.9033150198460577, 0.906459673934108, 0.9158936361982589, 0.9162305634219786,
    0.9179458292881879, 0.9179458292881879, 0.9179458292881879, 0.9182827565119075, 0.9199980223781168,
    0.9201514201385095, 0.922357010988831, 0.9275538581668104, 0.9275538581668104, 0.9275538581668104,
    0.9275538581668104, 0.9275538581668104, 0.9276788113093819, 0.9276788113093819, 0.9280282173191653,
    0.9280282173191653, 0.9302720683353517, 0.9302720683353517, 0.9334443340202726, 0.9358595684764642
]
f1_scores = [
    0.8761666448657759, 0.8702677241319231, 0.8679457817834164, 0.8675758224789398, 0.8682223029667664,
    0.8646958592752059, 0.8643731918364674, 0.8646105476659698, 0.873626374606325, 0.8735278912133134,
    0.8743551200821819, 0.8740445109575441, 0.8741430282719621, 0.8743454878290329, 0.874707287804546,
    0.8740119316105036, 0.8726397189175362, 0.8726397189175362, 0.8724949441838744, 0.8744889635068397,
    0.8744889635068397, 0.8752079908652229, 0.8751382321641781, 0.8757932350722782, 0.8761783012700022,
    0.8761783012700022, 0.8732367937765294, 0.8736941980075186, 0.8798035469189208, 0.8796139945482382,
    0.8733732258833967, 0.8724343053459807, 0.8714482892656249, 0.8696761227235278, 0.8699771205084014,
    0.8693731269845062, 0.8669975042027375, 0.8629021619464695, 0.8625725336353531, 0.8598771158455957,
    0.8590749067169886, 0.8589601465320224, 0.8579325005033409, 0.857561252239423, 0.8572518882279897,
    0.8544142672373158, 0.8527143621522134, 0.851547814401724, 0.8278740024184371, 0.7553706021365365
]
